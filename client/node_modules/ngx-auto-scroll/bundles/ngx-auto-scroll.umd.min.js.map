{"version":3,"file":"ngx-auto-scroll.umd.min.js","sources":["~/ngx-auto-scroll/src/ngx-auto-scroll.directive.ts","~/ngx-auto-scroll/src/ngx-auto-scroll.module.ts"],"sourcesContent":["import {AfterContentInit, Directive, ElementRef, HostListener, Input, OnDestroy} from '@angular/core';\nexport class NgxAutoScroll implements AfterContentInit, OnDestroy {\npublic lockYOffset: number = 10;\npublic observeAttributes: string = \"false\";\nprivate nativeElement: HTMLElement;\nprivate _isLocked: boolean = false;\nprivate mutationObserver: MutationObserver;\n/**\n * @param {?} element\n */\nconstructor(element: ElementRef) {\n        this.nativeElement = element.nativeElement;\n    }\n/**\n * @return {?}\n */\npublic getObserveAttributes(): boolean {\n        return this.observeAttributes !== \"\" && this.observeAttributes.toLowerCase() !== \"false\";\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentInit(): void {\n        this.mutationObserver = new MutationObserver(() => {\n            if (!this._isLocked) {\n                this.scrollDown();\n            }\n        });\n        this.mutationObserver.observe(this.nativeElement, {\n            childList: true,\n            subtree: true,\n            attributes: this.getObserveAttributes(),\n        });\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.mutationObserver.disconnect();\n    }\n/**\n * @return {?}\n */\npublic forceScrollDown(): void {\n        this.scrollDown();\n    }\n/**\n * @return {?}\n */\npublic isLocked(): boolean {\n      return this._isLocked;\n    }\n/**\n * @return {?}\n */\nprivate scrollDown(): void {\n        this.nativeElement.scrollTop = this.nativeElement.scrollHeight;\n    }\n/**\n * @return {?}\n */\nprivate scrollHandler(): void {\n        const /** @type {?} */ scrollFromBottom = this.nativeElement.scrollHeight - this.nativeElement.scrollTop - this.nativeElement.clientHeight;\n        this._isLocked = scrollFromBottom > this.lockYOffset;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: \"[ngx-auto-scroll]\",\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'lockYOffset': [{ type: Input, args: [\"lock-y-offset\", ] },],\n'observeAttributes': [{ type: Input, args: [\"observe-attributes\", ] },],\n'scrollHandler': [{ type: HostListener, args: [\"scroll\", ] },],\n};\n}\n\nfunction NgxAutoScroll_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxAutoScroll.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxAutoScroll.ctorParameters;\n/** @type {?} */\nNgxAutoScroll.propDecorators;\n/** @type {?} */\nNgxAutoScroll.prototype.lockYOffset;\n/** @type {?} */\nNgxAutoScroll.prototype.observeAttributes;\n/** @type {?} */\nNgxAutoScroll.prototype.nativeElement;\n/** @type {?} */\nNgxAutoScroll.prototype._isLocked;\n/** @type {?} */\nNgxAutoScroll.prototype.mutationObserver;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { NgxAutoScroll } from './ngx-auto-scroll.directive';\nexport class NgxAutoScrollModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n\tdeclarations: [NgxAutoScroll],\n\timports: [],\n\texports: [NgxAutoScroll]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxAutoScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxAutoScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxAutoScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgxAutoScroll","element","this","lockYOffset","observeAttributes","_isLocked","nativeElement","prototype","getObserveAttributes","toLowerCase","ngAfterContentInit","_this","mutationObserver","MutationObserver","scrollDown","observe","childList","subtree","attributes","ngOnDestroy","disconnect","forceScrollDown","isLocked","scrollTop","scrollHeight","scrollHandler","scrollFromBottom","clientHeight","decorators","type","Directive","args","selector","ctorParameters","ElementRef","propDecorators","Input","HostListener","NgxAutoScrollModule","NgModule","declarations","imports","exports"],"mappings":"0PACA,IAAAA,EAAA,WASA,SAAAA,EACKC,GAPOC,KAAZC,YAAkC,GACtBD,KAAZE,kBAAwC,QAG5BF,KAAZG,WAAiC,EAGzBH,KAAKI,cAAgBL,EAAQK,qBAIhCN,EAALO,UAAAC,qBAAK,WAEG,MADkC,KAA3BN,KAAKE,mBAAqE,UAAzCF,KAAKE,kBAAkBK,eAGlET,EAALO,UAAAG,mBAAK,WAAA,IAALC,EAAAT,KAIQA,KAHKU,iBAAmB,IAAIC,iBAAiB,WACpCF,EAAKN,WAINM,EAHKG,eAMbZ,KAHKU,iBAAiBG,QAAQb,KAAKI,eAI/BU,WAHW,EAIXC,SAHS,EAITC,WAHYhB,KAAKM,0BAIxBR,EAALO,UAAAY,YAAK,WAMGjB,KALKU,iBAAiBQ,cAGzBpB,EAALO,UAAAc,gBAAK,WAQGnB,KAPKY,cAGRd,EAALO,UAAAe,SAAK,WAUC,OATOpB,KAAKG,WAGbL,EAALO,UAAAO,WAAK,WAYGZ,KAXKI,cAAciB,UAAYrB,KAAKI,cAAckB,cAIrDxB,EAALO,UAAAkB,cAAK,WAaG,IAZMC,EAAmBxB,KAAKI,cAAckB,aAAetB,KAAKI,cAAciB,UAAYrB,KAAKI,cAAcqB,aAa7GzB,KAZKG,UAAYqB,EAAmBxB,KAAKC,eAlDjD,GAoDOH,EAAP4B,aACEC,KAAMC,EAAAA,UAAWC,OACjBC,SAAY,wBAIbhC,EAADiC,eAAC,WAAA,QAeAJ,KAAMK,EAAAA,cAZAlC,EAAPmC,gBAeAhC,cAdkB0B,KAAMO,EAAAA,MAAOL,MAAM,mBAerC3B,oBAdwByB,KAAMO,EAAAA,MAAOL,MAAM,wBAe3CN,gBAdoBI,KAAMQ,EAAAA,aAAcN,MAAM,aC/D9C,IAAAO,EAAA,kBAAA,aAAA,GAEyCA,EAAzCV,aACEC,KAAMU,EAAAA,SAAUR,OADjBS,cAEcxC,GADdyC,WACAC,SAES1C,OAITsC,EAADL,eAAC,WAAA"}
